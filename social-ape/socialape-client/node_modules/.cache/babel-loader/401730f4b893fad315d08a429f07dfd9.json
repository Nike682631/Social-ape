{"ast":null,"code":"var _jsxFileName = \"/home/nikunj/socialape-client/src/components/PostScream.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../util/MyButton\"; //Mui stuff\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\"; //Icons\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\"; //Redux\n\nimport { connect } from \"react-redux\";\nimport { postScream } from \"../redux/actions/dataActions\";\nimport theme from \"../util/theme\";\nconst styles = { ...theme,\n  submitButton: {\n    position: \"relative\"\n  },\n  progressSpinner: {\n    position: \"absolute\"\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90\",\n    top: \"10%\"\n  }\n};\n\nfunction PostScream(props) {\n  const [state, setState] = useState({\n    open: false,\n    body: \"\",\n    errors: {}\n  });\n\n  const handleOpen = () => {\n    setState({ ...state,\n      open: true\n    });\n  };\n\n  const handleClose = () => {\n    setState({ ...state,\n      open: false\n    });\n  };\n\n  const {\n    errors\n  } = state;\n  const {\n    classes,\n    UI: {\n      loading\n    }\n  } = props;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MyButton, {\n    onClick: handleOpen,\n    tip: \"Post a Scream!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: state.open,\n    onClose: handleClose,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MyButton, {\n    tip: \"Close\",\n    onClick: handleClose,\n    tipClassName: classes.closeButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Post a new Scream\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"body\",\n    type: \"text\",\n    label: \"SCREAM!!!\",\n    multiline: true,\n    rows: \"3\",\n    placeholder: \"Scream at your fellow mates\",\n    error: errors.body ? true : false,\n    helperText: errors.body,\n    className: classes.TextField,\n    onChange: handleChange,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submitButton,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Submit\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 30,\n    className: classes.progressSpinner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }))))));\n}\n\nPostScream.propTypes = {\n  postScream: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI\n});\n\nexport default connect(mapStateToProps, {\n  postScream\n})(withStyles(styles)(PostScream));","map":{"version":3,"sources":["/home/nikunj/socialape-client/src/components/PostScream.js"],"names":["React","Fragment","useEffect","useState","PropTypes","withStyles","MyButton","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","AddIcon","CloseIcon","connect","postScream","theme","styles","submitButton","position","progressSpinner","closeButton","left","top","PostScream","props","state","setState","open","body","errors","handleOpen","handleClose","classes","UI","loading","handleSubmit","handleChange","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../util/MyButton\";\n\n//Mui stuff\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n//Icons\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n//Redux\nimport { connect } from \"react-redux\";\nimport { postScream } from \"../redux/actions/dataActions\";\nimport theme from \"../util/theme\";\n\nconst styles = {\n  ...theme,\n  submitButton: {\n    position: \"relative\",\n  },\n  progressSpinner: {\n    position: \"absolute\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90\",\n    top: \"10%\",\n  },\n};\n\nfunction PostScream(props) {\n  const [state, setState] = useState({\n    open: false,\n    body: \"\",\n    errors: {},\n  });\n  const handleOpen = () => {\n    setState({ ...state, open: true });\n  };\n\n  const handleClose = () => {\n    setState({ ...state, open: false });\n  };\n\n  const { errors } = state;\n  const {\n    classes,\n    UI: { loading },\n  } = props;\n\n  return (\n    <Fragment>\n      <MyButton onClick={handleOpen} tip=\"Post a Scream!\">\n        <AddIcon />\n      </MyButton>\n      <Dialog open={state.open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n        <MyButton\n          tip=\"Close\"\n          onClick={handleClose}\n          tipClassName={classes.closeButton}\n        >\n          <CloseIcon />\n        </MyButton>\n        <DialogTitle>Post a new Scream</DialogTitle>\n        <DialogContent>\n          <form onSubmit={handleSubmit}>\n            <TextField\n              name=\"body\"\n              type=\"text\"\n              label=\"SCREAM!!!\"\n              multiline\n              rows=\"3\"\n              placeholder=\"Scream at your fellow mates\"\n              error={errors.body ? true : false}\n              helperText={errors.body}\n              className={classes.TextField}\n              onChange={handleChange}\n              fullWidth\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submitButton}\n              disabled={loading}\n            >\n              Submit\n              {loading && (\n                <CircularProgress\n                  size={30}\n                  className={classes.progressSpinner}\n                />\n              )}\n            </Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </Fragment>\n  );\n}\n\nPostScream.propTypes = {\n  postScream: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps, { postScream })(\n  withStyles(styles)(PostScream)\n);\n"]},"metadata":{},"sourceType":"module"}