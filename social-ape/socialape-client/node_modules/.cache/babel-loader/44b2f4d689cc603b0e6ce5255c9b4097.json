{"ast":null,"code":"var _jsxFileName = \"/home/nikunj/socialape-client/src/components/scream/ScreamDialog.js\";\nimport React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/MyButton\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport LikeButton from \"./LikeButton\";\nimport Comments from \"./Comments\";\nimport CommentForm from \"./CommentForm\"; //MUI stuff\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\"; //Icons\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\nimport ChatIcon from \"@material-ui/icons/Chat\"; //Redux stuff\n\nimport { connect } from \"react-redux\";\nimport { getScream, clearErrors } from \"../../redux/actions/dataActions\";\n\nconst styles = theme => ({\n  //   ...theme,\n  invisibeSeparator: {\n    border: \"none\",\n    margin: 4\n  },\n  profileImage: {\n    maxWidth: 200,\n    height: 200,\n    borderRadius: \"50%\",\n    objectFit: \"cover\"\n  },\n  dialogContent: {\n    padding: 20\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90%\"\n  },\n  expandButton: {\n    position: \"absolute\",\n    left: \"90%\"\n  },\n  spinnerDiv: {\n    textAlign: \"center\",\n    marginTop: 50,\n    marginBottom: 50\n  },\n  visibleSeparator: {\n    width: \"100%\",\n    borderBottom: \"1px solid rgba(0,0,0,0.1)\",\n    marginBottom: 20\n  }\n});\n\nfunction ScreamDialog(props) {\n  const [state, setState] = useState({\n    open: false,\n    newPath: \"\",\n    oldPath: \"\"\n  });\n\n  const handleOpen = () => {\n    let oldPath = window.location.pathname;\n    const {\n      userHandle,\n      screamId\n    } = props;\n    const newPath = `/users/${userHandle}/scream/${screamId}`;\n    window.history, pushState(null, null, newPath);\n    setState({ ...state,\n      open: true,\n      oldPath,\n      newPath\n    });\n    props.getScream(props.screamId);\n  };\n\n  const handleClose = () => {\n    window.history.pushState(null, null, state.oldPath);\n    setState({ ...state,\n      open: false\n    });\n    props.clearErrors();\n  };\n\n  const {\n    classes,\n    scream: {\n      screamId,\n      body,\n      createdAt,\n      likeCount,\n      commentCount,\n      userImage,\n      userHandle,\n      comments\n    },\n    UI: {\n      loading\n    }\n  } = props;\n  useEffect(() => {\n    if (props.openDialog) handleOpen();\n  }, []);\n  useEffect(() => {\n    // props.getScream(props.screamId);\n    return;\n  }, [JSON.stringify(comments)]);\n  const dialogMarkup = loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spinnerDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 200,\n    thickness: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: userImage,\n    alt: \"Profile\",\n    className: classes.profileImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: Link,\n    color: \"primary\",\n    variant: \"h5\",\n    to: `/users/${userHandle}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"@\", userHandle), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.invisibeSeparator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.invisibeSeparator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, body), /*#__PURE__*/React.createElement(LikeButton, {\n    screamId: screamId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, likeCount, \" likes\"), /*#__PURE__*/React.createElement(MyButton, {\n    tip: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChatIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, commentCount, \" comments\")), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.visibleSeparator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CommentForm, {\n    screamId: screamId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Comments, {\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }));\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MyButton, {\n    onClick: handleOpen,\n    tip: \"Expand Scream\",\n    tipClassName: classes.expandButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UnfoldMore, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: state.open,\n    onClose: handleClose,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MyButton, {\n    tip: \"Close\",\n    onClick: handleClose,\n    tipClassName: classes.closeButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogContent, {\n    className: classes.dialogContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, dialogMarkup)));\n}\n\nScreamDialog.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  scream: state.data.scream,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  getScream,\n  clearErrors\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));","map":{"version":3,"sources":["/home/nikunj/socialape-client/src/components/scream/ScreamDialog.js"],"names":["React","Fragment","useEffect","useState","useRef","PropTypes","withStyles","MyButton","dayjs","Link","LikeButton","Comments","CommentForm","Dialog","DialogContent","CircularProgress","Grid","Typography","CloseIcon","UnfoldMore","ChatIcon","connect","getScream","clearErrors","styles","theme","invisibeSeparator","border","margin","profileImage","maxWidth","height","borderRadius","objectFit","dialogContent","padding","closeButton","position","left","expandButton","spinnerDiv","textAlign","marginTop","marginBottom","visibleSeparator","width","borderBottom","ScreamDialog","props","state","setState","open","newPath","oldPath","handleOpen","window","location","pathname","userHandle","screamId","history","pushState","handleClose","classes","scream","body","createdAt","likeCount","commentCount","userImage","comments","UI","loading","openDialog","JSON","stringify","dialogMarkup","format","propTypes","func","isRequired","string","object","mapStateToProps","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/MyButton\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport LikeButton from \"./LikeButton\";\nimport Comments from \"./Comments\";\nimport CommentForm from \"./CommentForm\";\n//MUI stuff\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n//Icons\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\n//Redux stuff\nimport { connect } from \"react-redux\";\nimport { getScream, clearErrors } from \"../../redux/actions/dataActions\";\n\nconst styles = (theme) => ({\n  //   ...theme,\n  invisibeSeparator: {\n    border: \"none\",\n    margin: 4,\n  },\n  profileImage: {\n    maxWidth: 200,\n    height: 200,\n    borderRadius: \"50%\",\n    objectFit: \"cover\",\n  },\n  dialogContent: {\n    padding: 20,\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90%\",\n  },\n  expandButton: {\n    position: \"absolute\",\n    left: \"90%\",\n  },\n  spinnerDiv: {\n    textAlign: \"center\",\n    marginTop: 50,\n    marginBottom: 50,\n  },\n  visibleSeparator: {\n    width: \"100%\",\n    borderBottom: \"1px solid rgba(0,0,0,0.1)\",\n    marginBottom: 20,\n  },\n});\n\nfunction ScreamDialog(props) {\n  const [state, setState] = useState({ open: false, newPath: \"\", oldPath: \"\" });\n\n  const handleOpen = () => {\n    let oldPath = window.location.pathname;\n\n    const { userHandle, screamId } = props;\n\n    const newPath = `/users/${userHandle}/scream/${screamId}`;\n\n    window.history, pushState(null, null, newPath);\n\n    setState({ ...state, open: true, oldPath, newPath });\n    props.getScream(props.screamId);\n  };\n\n  const handleClose = () => {\n    window.history.pushState(null, null, state.oldPath);\n    setState({ ...state, open: false });\n    props.clearErrors();\n  };\n\n  const {\n    classes,\n    scream: {\n      screamId,\n      body,\n      createdAt,\n      likeCount,\n      commentCount,\n      userImage,\n      userHandle,\n      comments,\n    },\n    UI: { loading },\n  } = props;\n\n  useEffect(() => {\n    if (props.openDialog) handleOpen();\n  }, []);\n\n  useEffect(() => {\n    // props.getScream(props.screamId);\n    return;\n  }, [JSON.stringify(comments)]);\n\n  const dialogMarkup = loading ? (\n    <div className={classes.spinnerDiv}>\n      <CircularProgress size={200} thickness={2} />\n    </div>\n  ) : (\n    <Grid container spacing={10}>\n      <Grid item sm={5}>\n        <img src={userImage} alt=\"Profile\" className={classes.profileImage} />\n      </Grid>\n      <Grid item sm={7}>\n        <Typography\n          component={Link}\n          color=\"primary\"\n          variant=\"h5\"\n          to={`/users/${userHandle}`}\n        >\n          @{userHandle}\n        </Typography>\n        <hr className={classes.invisibeSeparator} />\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")}\n        </Typography>\n        <hr className={classes.invisibeSeparator} />\n        <Typography variant=\"body1\">{body}</Typography>\n        <LikeButton screamId={screamId} />\n        <span>{likeCount} likes</span>\n        <MyButton tip=\"comment\">\n          <ChatIcon color=\"primary\" />\n        </MyButton>\n        <span>{commentCount} comments</span>\n      </Grid>\n      <hr className={classes.visibleSeparator} />\n      <CommentForm screamId={screamId} />\n      <Comments comments={comments} />\n    </Grid>\n  );\n  return (\n    <Fragment>\n      <MyButton\n        onClick={handleOpen}\n        tip=\"Expand Scream\"\n        tipClassName={classes.expandButton}\n      >\n        <UnfoldMore color=\"primary\" />\n      </MyButton>\n\n      <Dialog open={state.open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n        <MyButton\n          tip=\"Close\"\n          onClick={handleClose}\n          tipClassName={classes.closeButton}\n        >\n          <CloseIcon />\n        </MyButton>\n        <DialogContent className={classes.dialogContent}>\n          {dialogMarkup}\n        </DialogContent>\n      </Dialog>\n    </Fragment>\n  );\n}\n\nScreamDialog.propTypes = {\n  clearErrors: PropTypes.func.isRequired,\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  scream: state.data.scream,\n  UI: state.UI,\n});\n\nconst mapActionsToProps = {\n  getScream,\n  clearErrors,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(ScreamDialog));\n"]},"metadata":{},"sourceType":"module"}