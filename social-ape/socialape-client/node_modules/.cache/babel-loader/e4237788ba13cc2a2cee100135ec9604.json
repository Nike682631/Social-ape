{"ast":null,"code":"var _jsxFileName = \"/home/nikunj/socialape-client/src/pages/user.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Scream from \"../components/scream/Scream\";\nimport StaticProfile from \"../components/profile/StaticProfile\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { getUserData } from \"../redux/actions/dataActions\";\n\nfunction User(props) {\n  const [state, setState] = useState({\n    profile: null,\n    screamIdParam: null\n  });\n  useEffect(() => {\n    const handle = props.match.params.handle;\n    const screamId = props.match.params.scream.screamId;\n    if (screamId) setState({ ...state,\n      screamIdParam: screamId\n    });\n    props.getUserData(handle);\n    axios.get(`/user/${handle}`).then(res => {\n      setState({ ...state,\n        profile: res.data.user\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const {\n    screams,\n    loading\n  } = props.data;\n  const {\n    screamIdParam\n  } = state;\n  const screamsMarkup = loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \" Loading data...\") : screams === null ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"No screams from this user\") : !screamIdParam ? screams.map(scream => /*#__PURE__*/React.createElement(Scream, {\n    key: scream.screamId,\n    scream: scream,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  })) : screams.map(scream => {\n    if (scream.screamId !== screamIdParam) {\n      /*#__PURE__*/\n      React.createElement(Scream, {\n        key: scream.screamId,\n        scream: scream,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      });\n    } else return /*#__PURE__*/React.createElement(Scream, {\n      key: scream.screamId,\n      scream: scream,\n      openDialog: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 8,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, screamsMarkup), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, state.profile === null ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Loading Profile...\") : /*#__PURE__*/React.createElement(StaticProfile, {\n    profile: state.profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })));\n}\n\nUser.propTypes = {\n  data: PropTypes.object.isRequired,\n  getUserData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nexport default connect(mapStateToProps, {\n  getUserData\n})(User);","map":{"version":3,"sources":["/home/nikunj/socialape-client/src/pages/user.js"],"names":["React","useEffect","useState","PropTypes","axios","Scream","StaticProfile","Grid","connect","getUserData","User","props","state","setState","profile","screamIdParam","handle","match","params","screamId","scream","get","then","res","data","user","catch","err","console","log","screams","loading","screamsMarkup","map","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Scream from \"../components/scream/Scream\";\nimport StaticProfile from \"../components/profile/StaticProfile\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { connect } from \"react-redux\";\nimport { getUserData } from \"../redux/actions/dataActions\";\n\nfunction User(props) {\n  const [state, setState] = useState({\n    profile: null,\n    screamIdParam: null,\n  });\n\n  useEffect(() => {\n    const handle = props.match.params.handle;\n    const screamId = props.match.params.scream.screamId;\n\n    if (screamId) setState({ ...state, screamIdParam: screamId });\n\n    props.getUserData(handle);\n    axios\n      .get(`/user/${handle}`)\n      .then((res) => {\n        setState({ ...state, profile: res.data.user });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const { screams, loading } = props.data;\n\n  const { screamIdParam } = state;\n  const screamsMarkup = loading ? (\n    <p> Loading data...</p>\n  ) : screams === null ? (\n    <p>No screams from this user</p>\n  ) : !screamIdParam ? (\n    screams.map((scream) => <Scream key={scream.screamId} scream={scream} />)\n  ) : (\n    screams.map((scream) => {\n      if (scream.screamId !== screamIdParam) {\n        <Scream key={scream.screamId} scream={scream} />;\n      } else return <Scream key={scream.screamId} scream={scream} openDialog />;\n    })\n  );\n\n  return (\n    <Grid container spacing={9}>\n      <Grid item sm={8} xs={12}>\n        {screamsMarkup}\n      </Grid>\n      <Grid item sm={4} xs={12}>\n        {state.profile === null ? (\n          <p>Loading Profile...</p>\n        ) : (\n          <StaticProfile profile={state.profile} />\n        )}\n      </Grid>\n    </Grid>\n  );\n}\n\nUser.propTypes = {\n  data: PropTypes.object.isRequired,\n  getUserData: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n});\n\nexport default connect(mapStateToProps, { getUserData })(User);\n"]},"metadata":{},"sourceType":"module"}