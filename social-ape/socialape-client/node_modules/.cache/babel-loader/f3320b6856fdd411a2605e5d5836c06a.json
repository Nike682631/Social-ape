{"ast":null,"code":"var _jsxFileName = \"/home/nikunj/socialape-client/src/components/scream/CommentForm.js\";\nimport React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\"; //MUI stuff\n\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\"; //Redux stuff\n\nimport { connect } from \"react-redux\";\nimport { submitComment } from \"../../redux/actions/dataActions\";\nimport { SET_ERRORS } from \"../../redux/types\";\n\nconst styles = theme => ({\n  palette: {\n    primary: {\n      light: \"#33c9dc\",\n      main: \"#00bcd4\",\n      dark: \"#008394\",\n      contrastText: \"#fff\"\n    },\n    secondary: {\n      light: \"#ff6333\",\n      main: \"#ff3d00\",\n      dark: \"#b22a00\",\n      contrastText: \"#fff\"\n    }\n  },\n  form: {\n    textAlign: \"center\"\n  },\n  image: {\n    margin: \"20px auto 20px auto\"\n  },\n  pageTitle: {\n    margin: \"10px auto 10px auto\"\n  },\n  textField: {\n    margin: \"10px auto 10px auto\"\n  },\n  button: {\n    marginTop: 20,\n    position: \"relative\"\n  },\n  customError: {\n    color: \"red\",\n    fontSize: \"0.8rem\",\n    marginTop: 10\n  },\n  progress: {\n    position: \"absolute\"\n  },\n  invisibeSeparator: {\n    border: \"none\",\n    margin: 4\n  },\n  visibleSeparator: {\n    width: \"100%\",\n    borderBottom: \"1px solid rgba(0,0,0,0.1)\",\n    marginBottom: 20\n  }\n});\n\nfunction CommentForm(props) {\n  const [state, setState] = useState({\n    body: \"\",\n    errors: {}\n  });\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n\n    if (props.UI.errors) {\n      setState({ ...state,\n        errors: props.UI.errors\n      });\n    }\n\n    if (!props.UI.errors && !props.UI.loading) {\n      setState({ ...state,\n        body: \"\"\n      });\n    }\n  }, [props.UI.errors]);\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    props.submitComment(props.screamId, {\n      body: state.body\n    });\n  };\n\n  const {\n    classes,\n    authenticated\n  } = props;\n  const errors = state.errors;\n  const commentFormMarkup = authenticated ? /*#__PURE__*/React.createElement(Grid, {\n    itme: true,\n    sm: 12,\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"body\",\n    type: \"text\",\n    label: \"Comment on scream\",\n    error: errors.comment ? true : false,\n    helperText: errors.comment,\n    value: state.body,\n    onChange: handleChange,\n    fullWidth: true,\n    className: classes.textField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.visibleSeparator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  })) : null;\n  return commentFormMarkup;\n}\n\nCommentForm.propTypes = {\n  UI: PropTypes.object.isRequired,\n  authenticated: PropTypes.bool.isRequired,\n  submitComment: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated\n});\n\nexport default connect(mapStateToProps, {\n  submitComment\n})(withStyles(styles)(CommentForm));","map":{"version":3,"sources":["/home/nikunj/socialape-client/src/components/scream/CommentForm.js"],"names":["React","Fragment","useEffect","useState","useRef","PropTypes","withStyles","Button","Grid","TextField","connect","submitComment","SET_ERRORS","styles","theme","palette","primary","light","main","dark","contrastText","secondary","form","textAlign","image","margin","pageTitle","textField","button","marginTop","position","customError","color","fontSize","progress","invisibeSeparator","border","visibleSeparator","width","borderBottom","marginBottom","CommentForm","props","state","setState","body","errors","isFirstRun","current","UI","loading","handleChange","event","target","name","value","handleSubmit","preventDefault","screamId","classes","authenticated","commentFormMarkup","comment","propTypes","object","isRequired","bool","func","string","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n//MUI stuff\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\n//Redux stuff\nimport { connect } from \"react-redux\";\nimport { submitComment } from \"../../redux/actions/dataActions\";\nimport { SET_ERRORS } from \"../../redux/types\";\n\nconst styles = (theme) => ({\n  palette: {\n    primary: {\n      light: \"#33c9dc\",\n      main: \"#00bcd4\",\n      dark: \"#008394\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff6333\",\n      main: \"#ff3d00\",\n      dark: \"#b22a00\",\n      contrastText: \"#fff\",\n    },\n  },\n  form: {\n    textAlign: \"center\",\n  },\n  image: {\n    margin: \"20px auto 20px auto\",\n  },\n  pageTitle: {\n    margin: \"10px auto 10px auto\",\n  },\n  textField: {\n    margin: \"10px auto 10px auto\",\n  },\n  button: {\n    marginTop: 20,\n    position: \"relative\",\n  },\n  customError: {\n    color: \"red\",\n    fontSize: \"0.8rem\",\n    marginTop: 10,\n  },\n  progress: {\n    position: \"absolute\",\n  },\n\n  invisibeSeparator: {\n    border: \"none\",\n    margin: 4,\n  },\n  visibleSeparator: {\n    width: \"100%\",\n    borderBottom: \"1px solid rgba(0,0,0,0.1)\",\n    marginBottom: 20,\n  },\n});\n\nfunction CommentForm(props) {\n  const [state, setState] = useState({\n    body: \"\",\n    errors: {},\n  });\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    if (props.UI.errors) {\n      setState({\n        ...state,\n        errors: props.UI.errors,\n      });\n    }\n    if (!props.UI.errors && !props.UI.loading) {\n      setState({\n        ...state,\n        body: \"\",\n      });\n    }\n  }, [props.UI.errors]);\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.submitComment(props.screamId, { body: state.body });\n  };\n\n  const { classes, authenticated } = props;\n  const errors = state.errors;\n  const commentFormMarkup = authenticated ? (\n    <Grid itme sm={12} style={{ textAlign: \"center\" }}>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          name=\"body\"\n          type=\"text\"\n          label=\"Comment on scream\"\n          error={errors.comment ? true : false}\n          helperText={errors.comment}\n          value={state.body}\n          onChange={handleChange}\n          fullWidth\n          className={classes.textField}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >\n          Submit\n        </Button>\n      </form>\n      <hr className={classes.visibleSeparator} />\n    </Grid>\n  ) : null;\n\n  return commentFormMarkup;\n}\n\nCommentForm.propTypes = {\n  UI: PropTypes.object.isRequired,\n  authenticated: PropTypes.bool.isRequired,\n  submitComment: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  screamId: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n  authenticated: state.user.authenticated,\n});\n\nexport default connect(mapStateToProps, { submitComment })(\n  withStyles(styles)(CommentForm)\n);\n"]},"metadata":{},"sourceType":"module"}