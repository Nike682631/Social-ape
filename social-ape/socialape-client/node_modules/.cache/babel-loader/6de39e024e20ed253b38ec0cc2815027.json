{"ast":null,"code":"import _objectSpread from\"/home/nikunj/socialape-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/nikunj/socialape-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,Fragment}from\"react\";import{Link}from\"react-router-dom\";import dayjs from\"dayjs\";import relativeTime from\"dayjs/plugin/relativeTime\";//MUI stuff\nimport Menu from\"@material-ui/core/Menu\";import MenuItem from\"@material-ui/core/MenuItem\";import IconButton from\"@material-ui/core/IconButton\";import ToolTip from\"@material-ui/core/Tooltip\";import Typography from\"@material-ui/core/Typography\";import Badge from\"@material-ui/core/Badge\";//Icons\nimport NotificationsIcon from\"@material-ui/icons/Notifications\";import FavoriteIcon from\"@material-ui/icons/Favorite\";import ChatIcon from\"@material-ui/icons/Chat\";//Redux\nimport{connect}from\"react-redux\";import{markNotificationsRead}from\"../../redux/actions/userActions\";function Notifications(props){var _useState=useState({anchorEl:null}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var notifications=props.notifications;var anchorEl=state.anchorEl;var notificationsIcon;dayjs.extend(relativeTime);var handleOpen=function handleOpen(event){setState(_objectSpread(_objectSpread({},state),{},{anchorEl:event.target}));};var handleClose=function handleClose(){setState({anchorEl:null});};var onMenuOpened=function onMenuOpened(){var unreadNotificationsIds=props.notifications.filter(function(not){return!not.read;}).map(function(not){return not.notificationId;});props.markNotificationsRead(unreadNotificationsIds);};if(notifications&&notifications.length>0){notifications.filter(function(not){return not.read===false;}).length>0?notificationsIcon=/*#__PURE__*/React.createElement(Badge,{badgeContent:notifications.filter(function(not){return not.read===false;}).length,color:\"secondary\"},/*#__PURE__*/React.createElement(NotificationsIcon,null)):notificationsIcon=/*#__PURE__*/React.createElement(NotificationsIcon,null);}else{notificationsIcon=/*#__PURE__*/React.createElement(NotificationsIcon,null);}var notificationsMarkup=notifications&&notifications.length>0?notifications.map(function(not){var verb=not.type===\"like\"?\"liked\":\"commented on\";var time=dayjs(not.createdAt).fromNow();var iconColor=not.read?\"primary\":\"secondary\";var icon=not.type===\"like\"?/*#__PURE__*/React.createElement(FavoriteIcon,{color:iconColor,style:{marginRight:10}}):/*#__PURE__*/React.createElement(ChatIcon,{color:iconColor,style:{marginRight:10}});return/*#__PURE__*/React.createElement(MenuItem,{key:not.createdAt,onClick:handleClose},icon,/*#__PURE__*/React.createElement(Typography,{component:Link,color:\"default\",variant:\"body1\",to:\"/users/\".concat(not.recipient,\"/scream/\").concat(not.screamId)},not.sender,\" \",verb,\" your scream \",time));}):/*#__PURE__*/React.createElement(MenuItem,{onClick:handleClose},\"You have no notifications yet\");return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(ToolTip,{placement:\"top\",title:\"Notifications\"},/*#__PURE__*/React.createElement(IconButton,{ariaowns:anchorEl?\"simple-menu\":undefined,\"aria-haspopup\":\"true\",onClick:handleOpen},notificationsIcon)),/*#__PURE__*/React.createElement(Menu,{anchorEl:anchorEl,open:Boolean(anchorEl),onClose:handleClose,onEntered:onMenuOpened},notificationsMarkup));}var mapStateToProps=function mapStateToProps(state){return{notifications:state.user.notifications};};export default connect(mapStateToProps,{markNotificationsRead:markNotificationsRead})(Notifications);","map":{"version":3,"sources":["/home/nikunj/socialape-client/src/components/layout/Notifications.js"],"names":["React","useEffect","useState","Fragment","Link","dayjs","relativeTime","Menu","MenuItem","IconButton","ToolTip","Typography","Badge","NotificationsIcon","FavoriteIcon","ChatIcon","connect","markNotificationsRead","Notifications","props","anchorEl","state","setState","notifications","notificationsIcon","extend","handleOpen","event","target","handleClose","onMenuOpened","unreadNotificationsIds","filter","not","read","map","notificationId","length","notificationsMarkup","verb","type","time","createdAt","fromNow","iconColor","icon","marginRight","recipient","screamId","sender","undefined","Boolean","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport PropTypes from \"prop-types\";\n//MUI stuff\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ToolTip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\n//Icons\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n//Redux\nimport { connect } from \"react-redux\";\nimport { markNotificationsRead } from \"../../redux/actions/userActions\";\n\nfunction Notifications(props) {\n  const [state, setState] = useState({\n    anchorEl: null,\n  });\n\n  const notifications = props.notifications;\n  const anchorEl = state.anchorEl;\n\n  let notificationsIcon;\n\n  dayjs.extend(relativeTime);\n\n  const handleOpen = (event) => {\n    setState({ ...state, anchorEl: event.target });\n  };\n\n  const handleClose = () => {\n    setState({ anchorEl: null });\n  };\n\n  const onMenuOpened = () => {\n    let unreadNotificationsIds = props.notifications\n      .filter((not) => !not.read)\n      .map((not) => not.notificationId);\n    props.markNotificationsRead(unreadNotificationsIds);\n  };\n\n  if (notifications && notifications.length > 0) {\n    notifications.filter((not) => not.read === false).length > 0\n      ? (notificationsIcon = (\n          <Badge\n            badgeContent={\n              notifications.filter((not) => not.read === false).length\n            }\n            color=\"secondary\"\n          >\n            <NotificationsIcon />\n          </Badge>\n        ))\n      : (notificationsIcon = <NotificationsIcon />);\n  } else {\n    notificationsIcon = <NotificationsIcon />;\n  }\n\n  let notificationsMarkup =\n    notifications && notifications.length > 0 ? (\n      notifications.map((not) => {\n        const verb = not.type === \"like\" ? \"liked\" : \"commented on\";\n        const time = dayjs(not.createdAt).fromNow();\n        const iconColor = not.read ? \"primary\" : \"secondary\";\n        const icon =\n          not.type === \"like\" ? (\n            <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />\n          ) : (\n            <ChatIcon color={iconColor} style={{ marginRight: 10 }} />\n          );\n        return (\n          <MenuItem key={not.createdAt} onClick={handleClose}>\n            {icon}\n            <Typography\n              component={Link}\n              color=\"default\"\n              variant=\"body1\"\n              to={`/users/${not.recipient}/scream/${not.screamId}`}\n            >\n              {not.sender} {verb} your scream {time}\n            </Typography>\n          </MenuItem>\n        );\n      })\n    ) : (\n      <MenuItem onClick={handleClose}>You have no notifications yet</MenuItem>\n    );\n\n  return (\n    <Fragment>\n      <ToolTip placement=\"top\" title=\"Notifications\">\n        <IconButton\n          ariaowns={anchorEl ? \"simple-menu\" : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleOpen}\n        >\n          {notificationsIcon}\n        </IconButton>\n      </ToolTip>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        onEntered={onMenuOpened}\n      >\n        {notificationsMarkup}\n      </Menu>\n    </Fragment>\n  );\n}\n\nNotifications.propTypes = {\n  markNotificationsRead: PropTypes.func.isRequired,\n  notifications: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  notifications: state.user.notifications,\n});\n\nexport default connect(mapStateToProps, { markNotificationsRead })(\n  Notifications\n);\n"]},"metadata":{},"sourceType":"module"}