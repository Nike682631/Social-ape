{"ast":null,"code":"import _defineProperty from\"/home/nikunj/socialape-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/nikunj/socialape-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/home/nikunj/socialape-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{Fragment,useEffect,useState,useRef}from\"react\";import withStyles from\"@material-ui/core/styles/withStyles\";import MyButton from\"../../util/MyButton\";//Mui stuff\nimport Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import Dialog from\"@material-ui/core/Dialog\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import CircularProgress from\"@material-ui/core/CircularProgress\";//Icons\nimport AddIcon from\"@material-ui/icons/Add\";import CloseIcon from\"@material-ui/icons/Close\";//Redux\nimport{connect}from\"react-redux\";import{postScream,clearErrors}from\"../../redux/actions/dataActions\";import theme from\"../../util/theme\";var styles=_objectSpread(_objectSpread({},theme),{},{submitButton:{position:\"relative\",float:\"right\",marginTop:10},progressSpinner:{position:\"absolute\"},closeButton:{position:\"absolute\",left:\"91%\",top:\"2%\"}});function PostScream(props){var _useState=useState({open:false,body:\"\",errors:{}}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var isFirstRun=useRef(true);useEffect(function(){if(isFirstRun.current){isFirstRun.current=false;return;}if(props.UI.errors){setState(_objectSpread(_objectSpread({},state),{},{errors:props.UI.errors}));}},[props.UI.errors]);var handleOpen=function handleOpen(){setState(_objectSpread(_objectSpread({},state),{},{open:true}));};var handleClose=function handleClose(){props.clearErrors();setState(_objectSpread(_objectSpread({},state),{},{open:false,errors:{}}));};var handleChange=function handleChange(event){setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},event.target.name,event.target.value)));};var handleSubmit=function handleSubmit(event){event.preventDefault();props.postScream({body:state.body});if(!props.UI.errors&&!props.UI.loading){setState(_objectSpread(_objectSpread({},state),{},{body:\"\"}));handleClose();}};var errors=state.errors;var classes=props.classes,loading=props.UI.loading;return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(MyButton,{onClick:handleOpen,tip:\"Post a Scream!\"},/*#__PURE__*/React.createElement(AddIcon,null)),/*#__PURE__*/React.createElement(Dialog,{open:state.open,onClose:handleClose,fullWidth:true,maxWidth:\"sm\"},/*#__PURE__*/React.createElement(MyButton,{tip:\"Close\",onClick:handleClose,tipClassName:classes.closeButton},/*#__PURE__*/React.createElement(CloseIcon,null)),/*#__PURE__*/React.createElement(DialogTitle,null,\"Post a new Scream\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(TextField,{name:\"body\",type:\"text\",label:\"SCREAM!!!\",multiline:true,rows:\"3\",placeholder:\"Scream at your fellow mates\",error:errors.body?true:false,helperText:errors.body,className:classes.TextField,onChange:handleChange,fullWidth:true}),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",className:classes.submitButton,disabled:loading},\"Submit\",loading&&/*#__PURE__*/React.createElement(CircularProgress,{size:30,className:classes.progressSpinner}))))));}var mapStateToProps=function mapStateToProps(state){return{UI:state.UI};};export default connect(mapStateToProps,{postScream:postScream,clearErrors:clearErrors})(withStyles(styles)(PostScream));","map":{"version":3,"sources":["/home/nikunj/socialape-client/src/components/scream/PostScream.js"],"names":["React","Fragment","useEffect","useState","useRef","withStyles","MyButton","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","AddIcon","CloseIcon","connect","postScream","clearErrors","theme","styles","submitButton","position","float","marginTop","progressSpinner","closeButton","left","top","PostScream","props","open","body","errors","state","setState","isFirstRun","current","UI","handleOpen","handleClose","handleChange","event","target","name","value","handleSubmit","preventDefault","loading","classes","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/MyButton\";\n\n//Mui stuff\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n//Icons\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n//Redux\nimport { connect } from \"react-redux\";\nimport { postScream, clearErrors } from \"../../redux/actions/dataActions\";\nimport theme from \"../../util/theme\";\n\nconst styles = {\n  ...theme,\n  submitButton: {\n    position: \"relative\",\n    float: \"right\",\n    marginTop: 10,\n  },\n  progressSpinner: {\n    position: \"absolute\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"91%\",\n    top: \"2%\",\n  },\n};\n\nfunction PostScream(props) {\n  const [state, setState] = useState({\n    open: false,\n    body: \"\",\n    errors: {},\n  });\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    if (props.UI.errors) {\n      setState({\n        ...state,\n        errors: props.UI.errors,\n      });\n    }\n  }, [props.UI.errors]);\n\n  const handleOpen = () => {\n    setState({ ...state, open: true });\n  };\n\n  const handleClose = () => {\n    props.clearErrors();\n    setState({ ...state, open: false, errors: {} });\n  };\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.value });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.postScream({ body: state.body });\n    if (!props.UI.errors && !props.UI.loading) {\n      setState({\n        ...state,\n        body: \"\",\n      });\n      handleClose();\n    }\n  };\n  const { errors } = state;\n  const {\n    classes,\n    UI: { loading },\n  } = props;\n\n  return (\n    <Fragment>\n      <MyButton onClick={handleOpen} tip=\"Post a Scream!\">\n        <AddIcon />\n      </MyButton>\n      <Dialog open={state.open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n        <MyButton\n          tip=\"Close\"\n          onClick={handleClose}\n          tipClassName={classes.closeButton}\n        >\n          <CloseIcon />\n        </MyButton>\n        <DialogTitle>Post a new Scream</DialogTitle>\n        <DialogContent>\n          <form onSubmit={handleSubmit}>\n            <TextField\n              name=\"body\"\n              type=\"text\"\n              label=\"SCREAM!!!\"\n              multiline\n              rows=\"3\"\n              placeholder=\"Scream at your fellow mates\"\n              error={errors.body ? true : false}\n              helperText={errors.body}\n              className={classes.TextField}\n              onChange={handleChange}\n              fullWidth\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submitButton}\n              disabled={loading}\n            >\n              Submit\n              {loading && (\n                <CircularProgress\n                  size={30}\n                  className={classes.progressSpinner}\n                />\n              )}\n            </Button>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </Fragment>\n  );\n}\n\nPostScream.propTypes = {\n  postScream: PropTypes.func.isRequired,\n  UI: PropTypes.object.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  UI: state.UI,\n});\n\nexport default connect(mapStateToProps, { postScream, clearErrors })(\n  withStyles(styles)(PostScream)\n);\n"]},"metadata":{},"sourceType":"module"}