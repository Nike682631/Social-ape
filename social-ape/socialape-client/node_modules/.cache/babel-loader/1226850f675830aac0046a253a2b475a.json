{"ast":null,"code":"var _jsxFileName = \"/home/nikunj/socialape-client/src/components/ScreamDialog.js\";\nimport React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../util/MyButton\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport LikeButton from \"./LikeButton\"; //MUI stuff\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\"; //Icons\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\nimport ChatIcon from \"@material-ui/icons/Chat\"; //Redux stuff\n\nimport { connect } from \"react-redux\";\nimport { getScream } from \"../redux/actions/dataActions\";\n\nconst styles = theme => ({\n  //   ...theme,\n  invisibeSeparator: {\n    border: \"none\",\n    margin: 4\n  },\n  profileImage: {\n    maxWidth: 200,\n    height: 200,\n    borderRadius: \"50%\",\n    objectFit: \"cover\"\n  },\n  dialogContent: {\n    padding: 20\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90%\"\n  },\n  expandButton: {\n    position: \"absolute\",\n    left: \"90%\"\n  },\n  spinnerDiv: {\n    textAlign: \"center\",\n    marginTop: 50,\n    marginBottom: 50\n  }\n});\n\nfunction ScreamDialog(props) {\n  const [state, setState] = useState({\n    open: false\n  });\n\n  const handleOpen = () => {\n    setState({ ...state,\n      open: true\n    });\n    props.getScream(props.screamId);\n  };\n\n  const handleClose = () => {\n    setState({ ...state,\n      open: false\n    });\n  };\n\n  const {\n    classes,\n    scream: {\n      screamId,\n      body,\n      createdAt,\n      likeCount,\n      commentCount,\n      userImage,\n      userHandle\n    },\n    UI: {\n      loading\n    }\n  } = props;\n  const dialogMarkup = loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spinnerDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 200,\n    thickness: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: userImage,\n    alt: \"Profile\",\n    className: classes.profileImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: Link,\n    color: \"primary\",\n    variant: \"h5\",\n    to: `/users/${userHandle}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"@\", userHandle), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.invisibeSeparator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.invisibeSeparator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, body), /*#__PURE__*/React.createElement(LikeButton, {\n    screamId: screamId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, likeCount, \" likes\"), /*#__PURE__*/React.createElement(MyButton, {\n    tip: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChatIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, commentCount, \" comments\")));\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MyButton, {\n    onClick: handleOpen,\n    tip: \"Expand Scream\",\n    tipClassName: classes.expandButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UnfoldMore, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: state.open,\n    onClose: handleClose,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MyButton, {\n    tip: \"Close\",\n    onClick: handleClose,\n    tipClassName: classes.closeButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogContent, {\n    className: classes.dialogContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, dialogMarkup)));\n}\n\nScreamDialog.propTypes = {\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  scream: state.data.scream,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  getScream\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));","map":{"version":3,"sources":["/home/nikunj/socialape-client/src/components/ScreamDialog.js"],"names":["React","Fragment","useEffect","useState","useRef","PropTypes","withStyles","MyButton","dayjs","Link","LikeButton","Dialog","DialogContent","CircularProgress","Grid","Typography","CloseIcon","UnfoldMore","ChatIcon","connect","getScream","styles","theme","invisibeSeparator","border","margin","profileImage","maxWidth","height","borderRadius","objectFit","dialogContent","padding","closeButton","position","left","expandButton","spinnerDiv","textAlign","marginTop","marginBottom","ScreamDialog","props","state","setState","open","handleOpen","screamId","handleClose","classes","scream","body","createdAt","likeCount","commentCount","userImage","userHandle","UI","loading","dialogMarkup","format","propTypes","func","isRequired","string","object","mapStateToProps","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../util/MyButton\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport LikeButton from \"./LikeButton\";\n//MUI stuff\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n//Icons\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\n//Redux stuff\nimport { connect } from \"react-redux\";\nimport { getScream } from \"../redux/actions/dataActions\";\n\nconst styles = (theme) => ({\n  //   ...theme,\n  invisibeSeparator: {\n    border: \"none\",\n    margin: 4,\n  },\n  profileImage: {\n    maxWidth: 200,\n    height: 200,\n    borderRadius: \"50%\",\n    objectFit: \"cover\",\n  },\n  dialogContent: {\n    padding: 20,\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90%\",\n  },\n  expandButton: {\n    position: \"absolute\",\n    left: \"90%\",\n  },\n  spinnerDiv: {\n    textAlign: \"center\",\n    marginTop: 50,\n    marginBottom: 50,\n  },\n});\n\nfunction ScreamDialog(props) {\n  const [state, setState] = useState({ open: false });\n\n  const handleOpen = () => {\n    setState({ ...state, open: true });\n    props.getScream(props.screamId);\n  };\n\n  const handleClose = () => {\n    setState({ ...state, open: false });\n  };\n\n  const {\n    classes,\n    scream: {\n      screamId,\n      body,\n      createdAt,\n      likeCount,\n      commentCount,\n      userImage,\n      userHandle,\n    },\n    UI: { loading },\n  } = props;\n\n  const dialogMarkup = loading ? (\n    <div className={classes.spinnerDiv}>\n      <CircularProgress size={200} thickness={2} />\n    </div>\n  ) : (\n    <Grid container spacing={10}>\n      <Grid item sm={5}>\n        <img src={userImage} alt=\"Profile\" className={classes.profileImage} />\n      </Grid>\n      <Grid item sm={7}>\n        <Typography\n          component={Link}\n          color=\"primary\"\n          variant=\"h5\"\n          to={`/users/${userHandle}`}\n        >\n          @{userHandle}\n        </Typography>\n        <hr className={classes.invisibeSeparator} />\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")}\n        </Typography>\n        <hr className={classes.invisibeSeparator} />\n        <Typography variant=\"body1\">{body}</Typography>\n        <LikeButton screamId={screamId} />\n        <span>{likeCount} likes</span>\n        <MyButton tip=\"comment\">\n          <ChatIcon color=\"primary\" />\n        </MyButton>\n        <span>{commentCount} comments</span>\n      </Grid>\n    </Grid>\n  );\n  return (\n    <Fragment>\n      <MyButton\n        onClick={handleOpen}\n        tip=\"Expand Scream\"\n        tipClassName={classes.expandButton}\n      >\n        <UnfoldMore color=\"primary\" />\n      </MyButton>\n\n      <Dialog open={state.open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n        <MyButton\n          tip=\"Close\"\n          onClick={handleClose}\n          tipClassName={classes.closeButton}\n        >\n          <CloseIcon />\n        </MyButton>\n        <DialogContent className={classes.dialogContent}>\n          {dialogMarkup}\n        </DialogContent>\n      </Dialog>\n    </Fragment>\n  );\n}\n\nScreamDialog.propTypes = {\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  scream: state.data.scream,\n  UI: state.UI,\n});\n\nconst mapActionsToProps = {\n  getScream,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(ScreamDialog));\n"]},"metadata":{},"sourceType":"module"}