{"ast":null,"code":"import { SET_SCREAM, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA, SET_SCREAMS, DELETE_SCREAM, POST_SCREAM } from \"../types\";\nconst initialState = {\n  screams: [],\n  scream: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_SCREAMS:\n      return { ...state,\n        screams: action.payload,\n        loading: false\n      };\n\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      let index = state.screams.findIndex(scream => scream.screamId === action.payload.screamId);\n      state.screams[index] = action.payload;\n      return { ...state\n      };\n\n    case DELETE_SCREAM:\n      let index1 = state.screams.findIndex(scream => scream.screamId === action.payload.screamId);\n      state.screams.splice(index1, 1);\n      return { ...state\n      };\n\n    case POST_SCREAM:\n      return { ...state,\n        screams: [action.payload, state.screams]\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/nikunj/socialape-client/src/redux/reducers/dataReducer.js"],"names":["SET_SCREAM","LIKE_SCREAM","UNLIKE_SCREAM","LOADING_DATA","SET_SCREAMS","DELETE_SCREAM","POST_SCREAM","initialState","screams","scream","loading","state","action","type","payload","index","findIndex","screamId","index1","splice"],"mappings":"AAAA,SACEA,UADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,aANF,EAOEC,WAPF,QAQO,UARP;AAUA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGJ,YAAlB,EAAgCK,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKN,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAFX;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,WAAL;AACA,SAAKC,aAAL;AACE,UAAIa,KAAK,GAAGJ,KAAK,CAACH,OAAN,CAAcQ,SAAd,CACTP,MAAD,IAAYA,MAAM,CAACQ,QAAP,KAAoBL,MAAM,CAACE,OAAP,CAAeG,QADrC,CAAZ;AAGAN,MAAAA,KAAK,CAACH,OAAN,CAAcO,KAAd,IAAuBH,MAAM,CAACE,OAA9B;AACA,aAAO,EACL,GAAGH;AADE,OAAP;;AAGF,SAAKN,aAAL;AACE,UAAIa,MAAM,GAAGP,KAAK,CAACH,OAAN,CAAcQ,SAAd,CACVP,MAAD,IAAYA,MAAM,CAACQ,QAAP,KAAoBL,MAAM,CAACE,OAAP,CAAeG,QADpC,CAAb;AAGAN,MAAAA,KAAK,CAACH,OAAN,CAAcW,MAAd,CAAqBD,MAArB,EAA6B,CAA7B;AACA,aAAO,EACL,GAAGP;AADE,OAAP;;AAGF,SAAKL,WAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELH,QAAAA,OAAO,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiBH,KAAK,CAACH,OAAvB;AAFJ,OAAP;;AAIF;AACE,aAAOG,KAAP;AAnCJ;AAqCD","sourcesContent":["import {\n  SET_SCREAM,\n  LIKE_SCREAM,\n  UNLIKE_SCREAM,\n  LOADING_DATA,\n  SET_SCREAMS,\n  DELETE_SCREAM,\n  POST_SCREAM,\n} from \"../types\";\n\nconst initialState = {\n  screams: [],\n  scream: {},\n  loading: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SET_SCREAMS:\n      return {\n        ...state,\n        screams: action.payload,\n        loading: false,\n      };\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      let index = state.screams.findIndex(\n        (scream) => scream.screamId === action.payload.screamId\n      );\n      state.screams[index] = action.payload;\n      return {\n        ...state,\n      };\n    case DELETE_SCREAM:\n      let index1 = state.screams.findIndex(\n        (scream) => scream.screamId === action.payload.screamId\n      );\n      state.screams.splice(index1, 1);\n      return {\n        ...state,\n      };\n    case POST_SCREAM:\n      return {\n        ...state,\n        screams: [action.payload, state.screams],\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}