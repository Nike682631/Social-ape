{"ast":null,"code":"var _jsxFileName = \"/home/nikunj/socialape-client/src/components/ScreamDialog.js\";\nimport React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../util/MyButton\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\"; //MUI stuff\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\"; //Icons\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\"; //Redux stuff\n\nimport { connect } from \"react-redux\";\nimport { getScream } from \"../redux/actions/dataActions\";\nimport theme from \"../util/theme\";\n\nconst styles = theme => ({ ...theme,\n  invisibeSeparator: {\n    border: \"none\",\n    margin: 4\n  },\n  profileImage: {\n    maxWidth: 200,\n    height: 200,\n    borderRadius: \"50%\",\n    objectFit: \"cover\"\n  },\n  dialogContent: {\n    padding: 20\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90%\"\n  }\n});\n\nfunction ScreamDialog(props) {\n  const [state, setState] = useState({\n    open: false\n  });\n\n  const handleOpen = () => {\n    setState({ ...state,\n      open: true\n    });\n    props.getScream(props.screamId);\n  };\n\n  const handleClose = () => {\n    setState({ ...state,\n      open: false\n    });\n  };\n\n  const {\n    classes,\n    scream: {\n      screamId,\n      body,\n      createdAt,\n      likeCount,\n      commentCount,\n      userImage,\n      userHandle\n    },\n    UI: {\n      loading\n    }\n  } = props;\n  const dialogMarkup = loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: userImage,\n    alt: \"Profile\",\n    className: classes.profileImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: Link,\n    color: \"primary\",\n    variant: \"h5\",\n    to: `/users/${userHandle}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"@\", userHandle), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.invisibeSeparator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")), /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.invisibeSeparator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, body)));\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MyButton, {\n    onClick: handleOpen,\n    tip: \"Expand Scream\",\n    tipClassName: classes.expandButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UnfoldMore, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: state.open,\n    onClose: handleClose,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MyButton, {\n    tip: \"Close\",\n    onClick: handleClose,\n    tipClassName: classes.closeButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogContent, {\n    className: classes.dialogContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, dialogMarkup)));\n}\n\nScreamDialog.propTypes = {\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  scream: state.data.scream,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  getScream\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));","map":{"version":3,"sources":["/home/nikunj/socialape-client/src/components/ScreamDialog.js"],"names":["React","Fragment","useEffect","useState","useRef","PropTypes","withStyles","MyButton","dayjs","Link","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","Grid","Typography","CloseIcon","UnfoldMore","connect","getScream","theme","styles","invisibeSeparator","border","margin","profileImage","maxWidth","height","borderRadius","objectFit","dialogContent","padding","closeButton","position","left","ScreamDialog","props","state","setState","open","handleOpen","screamId","handleClose","classes","scream","body","createdAt","likeCount","commentCount","userImage","userHandle","UI","loading","dialogMarkup","format","expandButton","propTypes","func","isRequired","string","object","mapStateToProps","data","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../util/MyButton\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\n//MUI stuff\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n//Icons\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\n//Redux stuff\nimport { connect } from \"react-redux\";\nimport { getScream } from \"../redux/actions/dataActions\";\nimport theme from \"../util/theme\";\n\nconst styles = (theme) => ({\n  ...theme,\n  invisibeSeparator: {\n    border: \"none\",\n    margin: 4,\n  },\n  profileImage: {\n    maxWidth: 200,\n    height: 200,\n    borderRadius: \"50%\",\n    objectFit: \"cover\",\n  },\n  dialogContent: {\n    padding: 20,\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90%\",\n  },\n});\n\nfunction ScreamDialog(props) {\n  const [state, setState] = useState({ open: false });\n\n  const handleOpen = () => {\n    setState({ ...state, open: true });\n    props.getScream(props.screamId);\n  };\n\n  const handleClose = () => {\n    setState({ ...state, open: false });\n  };\n\n  const {\n    classes,\n    scream: {\n      screamId,\n      body,\n      createdAt,\n      likeCount,\n      commentCount,\n      userImage,\n      userHandle,\n    },\n    UI: { loading },\n  } = props;\n\n  const dialogMarkup = loading ? (\n    <CircularProgress size={200} />\n  ) : (\n    <Grid container spacing={16}>\n      <Grid item sm={5}>\n        <img src={userImage} alt=\"Profile\" className={classes.profileImage} />\n      </Grid>\n      <Grid item sm={7}>\n        <Typography\n          component={Link}\n          color=\"primary\"\n          variant=\"h5\"\n          to={`/users/${userHandle}`}\n        >\n          @{userHandle}\n        </Typography>\n        <hr className={classes.invisibeSeparator} />\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")}\n        </Typography>\n        <hr className={classes.invisibeSeparator} />\n        <Typography variant=\"body1\">{body}</Typography>\n      </Grid>\n    </Grid>\n  );\n  return (\n    <Fragment>\n      <MyButton\n        onClick={handleOpen}\n        tip=\"Expand Scream\"\n        tipClassName={classes.expandButton}\n      >\n        <UnfoldMore color=\"primary\" />\n      </MyButton>\n\n      <Dialog open={state.open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n        <MyButton\n          tip=\"Close\"\n          onClick={handleClose}\n          tipClassName={classes.closeButton}\n        >\n          <CloseIcon />\n        </MyButton>\n        <DialogContent className={classes.dialogContent}>\n          {dialogMarkup}\n        </DialogContent>\n      </Dialog>\n    </Fragment>\n  );\n}\n\nScreamDialog.propTypes = {\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  scream: state.data.scream,\n  UI: state.UI,\n});\n\nconst mapActionsToProps = {\n  getScream,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToProps\n)(withStyles(styles)(ScreamDialog));\n"]},"metadata":{},"sourceType":"module"}